#!/usr/bin/env bash

function usage() {
    echo -e \
"Usage:
  run -n registry_name -h registry_host
  find all docker container into the registry.
  Arguments:
   - n: registry name or the registry dns.
   - h: registry host.
  "
}

source "$(dirname $0)/shared/args.sh"

echo -e "=== cleanup Azure"

echo -e "+ dependencies checks"

#Dependencies check
python3 --version >/dev/null 2>/dev/null || { echo -e "xxx missing dependency python3\n:  sudo apt install python3"; exit 2; }
docker --version >/dev/null 2>/dev/null || { echo -e "xxx missing dependency docker\n:  curl -fsSL https://get.docker.com | bash"; exit 2; }

#Env check
#[ -n "$REGISTRY_NAME" ] || { echo -e "xxx missing REGISTRY_NAME in the ENV. \nDo:\nexport REGISTRY_NAME=your.registry.name"; exit 2; }

LIST=$(python3 "$(dirname $0)/shared/scripts.py" list --host REGISTRY_HOST)

declare -i TOTAL=0

echo -e "+ upload loop"

for DOCKER in ${LIST[*]}
  do
    PARSED=$(sed 's/\:/%3A/g' <<< $(sed 's/\//%2F/g' <<<"$DOCKER"))
    echo -e " . pulling docker ... $DOCKER"
    docker pull $REGISTRY_HOST/$DOCKER > /dev/null
    echo -e " . building tarball ... $PARSED.tar"
    docker save $REGISTRY_NAME/$DOCKER -o $PARSED.tar
    echo -e " . uploading tarball ... $REGISTRY_NAME/$DOCKER"
    echo -e " . cleaning ... "
    docker image rm $REGISTRY_NAME/$DOCKER  > /dev/null
    rm  $PARSED.tar
    TOTAL=$TOTAL+1
  done

echo -e "+ total=$TOTAL"

echo -e "=== exit"

